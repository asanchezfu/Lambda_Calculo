# Generated from proyectoLambda.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,23,118,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,
        1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,
        11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,
        16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,
        18,1,19,1,19,5,19,100,8,19,10,19,12,19,103,9,19,1,20,4,20,106,8,
        20,11,20,12,20,107,1,21,1,21,1,22,4,22,113,8,22,11,22,12,22,114,
        1,22,1,22,0,0,23,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
        22,45,23,1,0,5,2,0,65,90,97,122,3,0,48,57,65,90,97,122,1,0,48,57,
        2,0,92,92,955,955,2,0,9,10,32,32,120,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
        0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
        0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
        0,0,0,1,47,1,0,0,0,3,49,1,0,0,0,5,51,1,0,0,0,7,53,1,0,0,0,9,55,1,
        0,0,0,11,57,1,0,0,0,13,59,1,0,0,0,15,61,1,0,0,0,17,63,1,0,0,0,19,
        65,1,0,0,0,21,67,1,0,0,0,23,70,1,0,0,0,25,72,1,0,0,0,27,74,1,0,0,
        0,29,77,1,0,0,0,31,80,1,0,0,0,33,83,1,0,0,0,35,88,1,0,0,0,37,93,
        1,0,0,0,39,97,1,0,0,0,41,105,1,0,0,0,43,109,1,0,0,0,45,112,1,0,0,
        0,47,48,5,32,0,0,48,2,1,0,0,0,49,50,5,41,0,0,50,4,1,0,0,0,51,52,
        5,40,0,0,52,6,1,0,0,0,53,54,5,125,0,0,54,8,1,0,0,0,55,56,5,123,0,
        0,56,10,1,0,0,0,57,58,5,43,0,0,58,12,1,0,0,0,59,60,5,45,0,0,60,14,
        1,0,0,0,61,62,5,42,0,0,62,16,1,0,0,0,63,64,5,46,0,0,64,18,1,0,0,
        0,65,66,5,61,0,0,66,20,1,0,0,0,67,68,5,33,0,0,68,69,5,61,0,0,69,
        22,1,0,0,0,70,71,5,62,0,0,71,24,1,0,0,0,72,73,5,60,0,0,73,26,1,0,
        0,0,74,75,5,62,0,0,75,76,5,61,0,0,76,28,1,0,0,0,77,78,5,60,0,0,78,
        79,5,61,0,0,79,30,1,0,0,0,80,81,5,105,0,0,81,82,5,102,0,0,82,32,
        1,0,0,0,83,84,5,116,0,0,84,85,5,104,0,0,85,86,5,101,0,0,86,87,5,
        110,0,0,87,34,1,0,0,0,88,89,5,101,0,0,89,90,5,108,0,0,90,91,5,115,
        0,0,91,92,5,101,0,0,92,36,1,0,0,0,93,94,5,114,0,0,94,95,5,101,0,
        0,95,96,5,99,0,0,96,38,1,0,0,0,97,101,7,0,0,0,98,100,7,1,0,0,99,
        98,1,0,0,0,100,103,1,0,0,0,101,99,1,0,0,0,101,102,1,0,0,0,102,40,
        1,0,0,0,103,101,1,0,0,0,104,106,7,2,0,0,105,104,1,0,0,0,106,107,
        1,0,0,0,107,105,1,0,0,0,107,108,1,0,0,0,108,42,1,0,0,0,109,110,7,
        3,0,0,110,44,1,0,0,0,111,113,7,4,0,0,112,111,1,0,0,0,113,114,1,0,
        0,0,114,112,1,0,0,0,114,115,1,0,0,0,115,116,1,0,0,0,116,117,6,22,
        0,0,117,46,1,0,0,0,4,0,101,107,114,1,6,0,0
    ]

class proyectoLambdaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    RPAR = 2
    LPAR = 3
    RCURL = 4
    LCURL = 5
    PLUS = 6
    MINUS = 7
    MULT = 8
    DOT = 9
    EQ = 10
    NEQ = 11
    GT = 12
    LT = 13
    GTEQ = 14
    LTEQ = 15
    IF = 16
    THEN = 17
    ELSE = 18
    REC = 19
    VAR = 20
    INT = 21
    LAMBDA = 22
    WS = 23

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "' '", "')'", "'('", "'}'", "'{'", "'+'", "'-'", "'*'", "'.'", 
            "'='", "'!='", "'>'", "'<'", "'>='", "'<='", "'if'", "'then'", 
            "'else'", "'rec'" ]

    symbolicNames = [ "<INVALID>",
            "RPAR", "LPAR", "RCURL", "LCURL", "PLUS", "MINUS", "MULT", "DOT", 
            "EQ", "NEQ", "GT", "LT", "GTEQ", "LTEQ", "IF", "THEN", "ELSE", 
            "REC", "VAR", "INT", "LAMBDA", "WS" ]

    ruleNames = [ "T__0", "RPAR", "LPAR", "RCURL", "LCURL", "PLUS", "MINUS", 
                  "MULT", "DOT", "EQ", "NEQ", "GT", "LT", "GTEQ", "LTEQ", 
                  "IF", "THEN", "ELSE", "REC", "VAR", "INT", "LAMBDA", "WS" ]

    grammarFileName = "proyectoLambda.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


